window.addEventListener("load", function() {
    let e = document.querySelector(".preloader");
    e.classList.add("hide"),
    setTimeout(function() {
        e.remove()
    }, 600)
}),
AOS.init({
    offset: 200,
    duration: 1e3,
    once: !0
}),
new Swiper(".image-slider",{
    loop: !0,
    grabCursor: !0,
    effect: "creative",
    speed: 2e3,
    autoplay: {
        delay: 500
    },
    pagination: {
        el: ".swiper-pagination",
        type: "bullets",
        clickable: !0,
        dynamicBullets: !0
    },
    creativeEffect: {
        prev: {
            translate: [0, 0, 0]
        },
        next: {
            translate: ["100%", 0, 0]
        }
    },
    breakpoints: {
        992: {
            slidesPerView: 2
        }
    }
}),
new Swiper(".slider-testimonial",{
    slidesPerView: 2,
    spaceBetween: 30,
    loop: !0,
    grabCursor: !0,
    autoHeight: !0,
    keyboard: {
        enabled: !0
    },
    pagination: {
        el: ".swiper-pagination",
        type: "bullets",
        clickable: !0,
        dynamicBullets: !0
    },
    breakpoints: {
        320: {
            slidesPerView: 1
        },
        600: {
            slidesPerView: 1.5,
            spaceBetween: 20
        },
        1090: {
            slidesPerView: 2
        }
    }
});
const popupLinks = document.querySelectorAll(".popup-link")
  , body = document.querySelector("body")
  , lockPadding = document.querySelectorAll(".lock-padding");
let unlock = !0;
const timeout = 600;
if (popupLinks.length > 0)
    for (let index = 0; index < popupLinks.length; index++) {
        let e = popupLinks[index];
        e.addEventListener("click", function(t) {
            let o = e.getAttribute("href").replace("#", "")
              , l = document.getElementById(o);
            popupOpen(l),
            t.preventDefault()
        })
    }
const popupCloseIcon = document.querySelectorAll(".close-popup");
if (popupCloseIcon.length > 0)
    for (let index = 0; index < popupCloseIcon.length; index++) {
        let t = popupCloseIcon[index];
        t.addEventListener("click", function(e) {
            popupClose(t.closest(".popup")),
            e.preventDefault()
        })
    }
function popupOpen(e) {
    if (e && unlock) {
        let t = document.querySelector(".popup.active");
        t ? popupClose(t, !1) : bodyLock(),
        e.classList.add("active"),
        e.addEventListener("click", function(e) {
            e.target.closest(".popup__content") || popupClose(e.target.closest(".popup"))
        })
    }
}
function popupClose(e, t=!0) {
    unlock && (e.classList.remove("active"),
    t && bodyUnlock())
}
function bodyLock() {
    let e = window.innerWidth - document.querySelector(".wrapper").offsetWidth + "px";
    if (lockPadding.length > 0)
        for (let t = 0; t < lockPadding.length; t++) {
            let o = lockPadding[t];
            o.style.paddingRight = e
        }
    body.style.paddingRight = e,
    body.classList.add("lock"),
    unlock = !1,
    setTimeout(function() {
        unlock = !0
    }, 600)
}
function bodyUnlock() {
    setTimeout(function() {
        if (lockPadding.length > 0)
            for (let e = 0; e < lockPadding.length; e++) {
                let t = lockPadding[e];
                t.style.paddingRight = "0px"
            }
        body.style.paddingRight = "0px",
        body.classList.remove("lock")
    }, 600),
    unlock = !1,
    setTimeout(function() {
        unlock = !0
    }, 600)
}
const iconMenu = document.querySelector(".header__btnopen")
  , closeIcon = document.querySelector(".navigation__btnclose")
  , menu = document.querySelector(".navigation");
iconMenu && iconMenu.addEventListener("click", function(e) {
    menu.classList.add("active"),
    bodyLock()
}),
closeIcon && closeIcon.addEventListener("click", function(e) {
    menu.classList.remove("active"),
    bodyUnlock()
}),
menu.addEventListener("click", function(e) {
    e.target.closest(".navigation__box") || (menu.classList.remove("active"),
    bodyUnlock())
});
const scrollLinks = document.querySelectorAll(".menu__link");
scrollLinks.length > 0 && scrollLinks.forEach(e => {
    e.addEventListener("click", function(e) {
        let t = e.target;
        if (t.dataset.scrollto && document.querySelector(t.dataset.scrollto)) {
            let o = document.querySelector(t.dataset.scrollto)
              , l = o.getBoundingClientRect().top + scrollY - document.querySelector(".header__btnopen").offsetHeight;
            menu.classList.contains("active") && (menu.classList.remove("active"),
            bodyUnlock()),
            window.scrollTo({
                top: l,
                behavior: "smooth"
            }),
            e.preventDefault()
        }
    })
}
);
const scrollButton = document.querySelector(".scroll-top");
window.addEventListener("scroll", () => {
    window.scrollY > 0 ? (scrollButton.classList.add("active"),
    iconMenu.classList.add("scroll")) : (scrollButton.classList.remove("active"),
    iconMenu.classList.remove("scroll"))
}
),
scrollButton.addEventListener("click", () => {
    window.scrollTo({
        top: 0,
        behavior: "smooth"
    })
}
);
const spollers = document.querySelectorAll(".services__block")
  , spollerLabels = document.querySelectorAll(".service__label");
spollerLabels.forEach.call(spollerLabels, function(e) {
    e.addEventListener("click", function() {
        let t = e.parentElement.querySelector(".service__text");
        e.classList.toggle("active"),
        t.classList.toggle("active"),
        t.classList.contains("active") ? t.style.maxHeight = t.scrollHeight + "px" : t.style.maxHeight = null
    })
});
const mailPath = "mail.php";
document.querySelectorAll(".popup__form").forEach(e => {
    e.addEventListener("submit", function(e) {
        let t = this
          , o = new FormData(this)
          , l = new XMLHttpRequest;
        l.open("POST", "mail.php", !0),
        l.send(o),
        l.onreadystatechange = function() {
            4 == this.readyState && 200 == this.status && (setTimeout(function() {
                t.reset()
            }, 1e3),
            alert("Thank you!"))
        }
        ,
        e.preventDefault()
    })
}
);
